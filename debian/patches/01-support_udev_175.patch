From: David Paleino <dapal@debian.org>
Subject: usb_id, from udev 175, is a builtin
Origin: vendor, http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=649137
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=649137
Forwarded: no

---
 packaging/generic/print-camera-list.c |   22 +++++++++++++++++++---
 1 file changed, 19 insertions(+), 3 deletions(-)

--- libgphoto2.orig/packaging/generic/print-camera-list.c
+++ libgphoto2/packaging/generic/print-camera-list.c
@@ -369,13 +369,15 @@ idlist_camera_func (const func_params_t
 typedef enum {
 		UDEV_PRE_0_98 = 0,
 		UDEV_0_98 = 1,
-		UDEV_136 = 2
+		UDEV_136 = 2,
+		UDEV_175 = 3
 } udev_version_t;
 
 static const StringFlagItem udev_version_t_map[] = {
 	{ "pre-0.98", UDEV_PRE_0_98 },
 	{ "0.98", UDEV_0_98 },
 	{ "136", UDEV_136 },
+	{ "175", UDEV_175 },
 	{ NULL, 0 }
 };
 
@@ -414,6 +416,16 @@ udev_parse_params (const func_params_t *
 		"ENV{ID_USB_INTERFACES}==\"*:08*:*\", GOTO=\"libgphoto2_usb_end\"\n"
 		/* shortcut the most common camera driver, ptp class, so we avoid parsing 1000
 		 * more rules . It will be completed in udev_begin_func() */
+		"ENV{ID_USB_INTERFACES}==\"*:060101:*\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"PTP\", ",
+		/* UDEV_175 */
+		"ACTION!=\"add\", GOTO=\"libgphoto2_rules_end\"\n"
+		"SUBSYSTEM!=\"usb\", GOTO=\"libgphoto2_usb_end\"\n"
+		"ENV{DEVTYPE}!=\"usb_device\", GOTO=\"libgphoto2_usb_end\"\n\n"
+		"ENV{ID_USB_INTERFACES}==\"\", IMPORT{builtin}=\"usb_id\"\n"
+		/* ignore mass storage class having devices in mark-up */
+		"ENV{ID_USB_INTERFACES}==\"*:08*:*\", GOTO=\"libgphoto2_usb_end\"\n"
+		/* shortcut the most common camera driver, ptp class, so we avoid parsing 1000
+		 * more rules . It will be completed in udev_begin_func() */
 		"ENV{ID_USB_INTERFACES}==\"*:060101:*\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"PTP\", "
 	};
 	static const char * const usbcam_strings[] = {
@@ -422,6 +434,8 @@ udev_parse_params (const func_params_t *
 		/* UDEV_0_98 */
 		"ATTRS{idVendor}==\"%04x\", ATTRS{idProduct}==\"%04x\"",
 		/* UDEV_136 */
+		"ATTRS{idVendor}==\"%04x\", ATTRS{idProduct}==\"%04x\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"proprietary\"",
+		/* UDEV_175 */
 		"ATTRS{idVendor}==\"%04x\", ATTRS{idProduct}==\"%04x\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"proprietary\""
 	};
 	static const char * const usbdisk_strings[] = {
@@ -430,6 +444,8 @@ udev_parse_params (const func_params_t *
 		/* UDEV_0_98 */
 		"KERNEL==\"%s\", ATTRS{idVendor}==\"%04x\", ATTRS{idProduct}==\"%04x\"",
 		/* UDEV_136 */
+		"KERNEL==\"%s\", ATTRS{idVendor}==\"%04x\", ATTRS{idProduct}==\"%04x\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"proprietary\"",
+		/* UDEV_175 */
 		"KERNEL==\"%s\", ATTRS{idVendor}==\"%04x\", ATTRS{idProduct}==\"%04x\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"proprietary\""
 	};
 	udev_persistent_data_t *pdata;
@@ -508,7 +524,7 @@ udev_begin_func (const func_params_t *pa
 		printf ("# this file is autogenerated, local changes will be LOST on upgrades\n");
 		printf ("%s", pdata->begin_string);
 
-		if (pdata->version == UDEV_136) {
+		if (pdata->version == UDEV_136 || pdata->version == UDEV_175) {
 			if (pdata->mode != NULL || pdata->owner != NULL || pdata->group != NULL) {
 				if (pdata->mode != NULL) {
 					printf("MODE=\"%s\", ", pdata->mode);
@@ -599,7 +615,7 @@ udev_camera_func (const func_params_t *p
 
 	if (flags & GP_USB_HOTPLUG_MATCH_INT_CLASS) {
 		if ((flags & (GP_USB_HOTPLUG_MATCH_INT_CLASS|GP_USB_HOTPLUG_MATCH_INT_SUBCLASS|GP_USB_HOTPLUG_MATCH_INT_PROTOCOL)) == (GP_USB_HOTPLUG_MATCH_INT_CLASS|GP_USB_HOTPLUG_MATCH_INT_SUBCLASS|GP_USB_HOTPLUG_MATCH_INT_PROTOCOL)) {
-			if (pdata->version == UDEV_136) {
+			if (pdata->version == UDEV_136 || pdata->version == UDEV_175) {
 				printf("ENV{ID_USB_INTERFACES}==\"*:%02d%02d%02d:*\", ENV{ID_GPHOTO2}=\"1\", ENV{GPHOTO2_DRIVER}=\"PTP\"", class, subclass, proto);
 			} else {
 				printf("PROGRAM=\"check-ptp-camera %02d/%02d/%02d\"", class, subclass, proto);
